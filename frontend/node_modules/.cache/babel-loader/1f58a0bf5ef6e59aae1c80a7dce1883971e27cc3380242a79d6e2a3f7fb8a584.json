{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Projects/hopewd/frontend/src/components/VideoFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport VideoCard from './VideoCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoFeed = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n  const fetchVideos = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/videos?page=1&limit=10');\n      setVideos(res.data);\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n    }\n  };\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n  const handleScroll = e => {\n    const direction = e.deltaY > 0 ? 1 : -1; // Scroll down or up\n    setCurrentVideoIndex(prevIndex => {\n      const newIndex = prevIndex + direction;\n      return Math.max(0, Math.min(newIndex, videos.length - 1)); // Clamp index\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-feed\",\n    onWheel: handleScroll // Listen for scroll events\n    ,\n    style: {\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      style: {\n        display: index === currentVideoIndex ? 'block' : 'none',\n        // Show only the current video\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(VideoCard, {\n        video: video,\n        isCurrent: index === currentVideoIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, video.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoFeed, \"BdJiebbRG4tvjbLDyoYOI3RTMRE=\");\n_c = VideoFeed;\nexport default VideoFeed;\nvar _c;\n$RefreshReg$(_c, \"VideoFeed\");","map":{"version":3,"names":["React","useState","useEffect","axios","VideoCard","jsxDEV","_jsxDEV","VideoFeed","_s","videos","setVideos","currentVideoIndex","setCurrentVideoIndex","fetchVideos","res","get","data","error","console","handleScroll","e","direction","deltaY","prevIndex","newIndex","Math","max","min","length","className","onWheel","style","height","overflow","children","map","video","index","display","isCurrent","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/chris/Projects/hopewd/frontend/src/components/VideoFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport VideoCard from './VideoCard';\n\nconst VideoFeed = () => {\n  const [videos, setVideos] = useState([]);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n\n  const fetchVideos = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/videos?page=1&limit=10');\n      setVideos(res.data);\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  const handleScroll = (e) => {\n    const direction = e.deltaY > 0 ? 1 : -1; // Scroll down or up\n    setCurrentVideoIndex((prevIndex) => {\n      const newIndex = prevIndex + direction;\n      return Math.max(0, Math.min(newIndex, videos.length - 1)); // Clamp index\n    });\n  };\n\n  return (\n    <div\n      className=\"video-feed\"\n      onWheel={handleScroll} // Listen for scroll events\n      style={{ height: '100vh', overflow: 'hidden' }}\n    >\n      {videos.map((video, index) => (\n        <div\n          key={video.id}\n          className=\"video-container\"\n          style={{\n            display: index === currentVideoIndex ? 'block' : 'none', // Show only the current video\n            height: '100vh',\n          }}\n        >\n          <VideoCard video={video} isCurrent={index === currentVideoIndex} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default VideoFeed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE7D,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,kDAAkD,CAAC;MAC/EL,SAAS,CAACI,GAAG,CAACE,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzCV,oBAAoB,CAAEW,SAAS,IAAK;MAClC,MAAMC,QAAQ,GAAGD,SAAS,GAAGF,SAAS;MACtC,OAAOI,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAACH,QAAQ,EAAEf,MAAM,CAACmB,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC;EACJ,CAAC;EAED,oBACEtB,OAAA;IACEuB,SAAS,EAAC,YAAY;IACtBC,OAAO,EAAEX,YAAa,CAAC;IAAA;IACvBY,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAS,CAAE;IAAAC,QAAA,EAE9CzB,MAAM,CAAC0B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvB/B,OAAA;MAEEuB,SAAS,EAAC,iBAAiB;MAC3BE,KAAK,EAAE;QACLO,OAAO,EAAED,KAAK,KAAK1B,iBAAiB,GAAG,OAAO,GAAG,MAAM;QAAE;QACzDqB,MAAM,EAAE;MACV,CAAE;MAAAE,QAAA,eAEF5B,OAAA,CAACF,SAAS;QAACgC,KAAK,EAAEA,KAAM;QAACG,SAAS,EAAEF,KAAK,KAAK1B;MAAkB;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAP9DP,KAAK,CAACQ,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnC,EAAA,CA7CID,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}