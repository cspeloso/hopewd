{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Projects/hopewd/frontend/src/components/videofeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport VideoCard from './VideoCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoFeed = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n  const videoRefs = useRef([]); // Array of refs for video containers\n\n  const fetchVideos = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/videos?page=1&limit=10');\n      console.log('Fetched videos:', res.data);\n      const updatedVideos = res.data.map(video => ({\n        ...video,\n        url: `${video.url}`\n      }));\n      setVideos(updatedVideos);\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n    }\n  };\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n  useEffect(() => {\n    // Scroll the current video into view\n    if (videoRefs.current[currentVideoIndex]) {\n      videoRefs.current[currentVideoIndex].scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  }, [currentVideoIndex]);\n  const handleScroll = (() => {\n    let lastExecution = 0;\n    let timeoutId = null;\n    return e => {\n      const now = Date.now();\n\n      // Throttle logic\n      if (now - lastExecution < 150) return; // Throttle interval (150ms)\n      lastExecution = now;\n\n      // Clear debounce timeout\n      if (timeoutId) clearTimeout(timeoutId);\n      const direction = e.deltaY > 0 ? 1 : -1; // Scroll down or up\n      setCurrentVideoIndex(prevIndex => {\n        const newIndex = Math.max(0, Math.min(prevIndex + direction, videos.length - 1)); // Clamp index\n        console.log('Previous Index:', prevIndex, 'New Index:', newIndex); // Debug log\n        return newIndex;\n      });\n\n      // Debounce logic for when scrolling stops\n      timeoutId = setTimeout(() => {\n        console.log('Scroll stopped');\n      }, 200); // Debounce interval (200ms)\n    };\n  })();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-feed\",\n    onWheel: handleScroll,\n    style: {\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [videos.length === 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 31\n    }, this), videos.map((video, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => videoRefs.current[index] = el // Set ref for each video container\n      ,\n      className: \"video-container\",\n      style: {\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(VideoCard, {\n        video: video,\n        isCurrent: index === currentVideoIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, video.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoFeed, \"sPXrCek/VFSOLjb0SDb/E1ie/gI=\");\n_c = VideoFeed;\nexport default VideoFeed;\nvar _c;\n$RefreshReg$(_c, \"VideoFeed\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","VideoCard","jsxDEV","_jsxDEV","VideoFeed","_s","videos","setVideos","currentVideoIndex","setCurrentVideoIndex","videoRefs","fetchVideos","res","get","console","log","data","updatedVideos","map","video","url","error","current","scrollIntoView","behavior","block","handleScroll","lastExecution","timeoutId","e","now","Date","clearTimeout","direction","deltaY","prevIndex","newIndex","Math","max","min","length","setTimeout","className","onWheel","style","height","overflow","children","fileName","_jsxFileName","lineNumber","columnNumber","index","ref","el","isCurrent","id","_c","$RefreshReg$"],"sources":["/Users/chris/Projects/hopewd/frontend/src/components/videofeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport VideoCard from './VideoCard';\n\nconst VideoFeed = () => {\n  const [videos, setVideos] = useState([]);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n  const videoRefs = useRef([]); // Array of refs for video containers\n\n  const fetchVideos = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/videos?page=1&limit=10');\n      console.log('Fetched videos:', res.data);\n\n      const updatedVideos = res.data.map((video) => ({\n        ...video,\n        url: `${video.url}`,\n      }));\n\n      setVideos(updatedVideos);\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  useEffect(() => {\n    // Scroll the current video into view\n    if (videoRefs.current[currentVideoIndex]) {\n      videoRefs.current[currentVideoIndex].scrollIntoView({\n        behavior: 'smooth',\n        block: 'start',\n      });\n    }\n  }, [currentVideoIndex]);\n\n  const handleScroll = (() => {\n    let lastExecution = 0;\n    let timeoutId = null;\n  \n    return (e) => {\n      const now = Date.now();\n  \n      // Throttle logic\n      if (now - lastExecution < 150) return; // Throttle interval (150ms)\n      lastExecution = now;\n  \n      // Clear debounce timeout\n      if (timeoutId) clearTimeout(timeoutId);\n  \n      const direction = e.deltaY > 0 ? 1 : -1; // Scroll down or up\n      setCurrentVideoIndex((prevIndex) => {\n        const newIndex = Math.max(0, Math.min(prevIndex + direction, videos.length - 1)); // Clamp index\n        console.log('Previous Index:', prevIndex, 'New Index:', newIndex); // Debug log\n        return newIndex;\n      });\n  \n      // Debounce logic for when scrolling stops\n      timeoutId = setTimeout(() => {\n        console.log('Scroll stopped');\n      }, 200); // Debounce interval (200ms)\n    };\n  })();\n\n  return (\n    <div\n      className=\"video-feed\"\n      onWheel={handleScroll}\n      style={{ height: '100vh', overflow: 'hidden' }}\n    >\n      {videos.length === 0 && <h3>Loading...</h3>}\n      {videos.map((video, index) => (\n        <div\n          key={video.id}\n          ref={(el) => (videoRefs.current[index] = el)} // Set ref for each video container\n          className=\"video-container\"\n          style={{\n            height: '100vh',\n          }}\n        >\n          <VideoCard video={video} isCurrent={index === currentVideoIndex} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default VideoFeed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAMa,SAAS,GAAGX,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9B,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,kDAAkD,CAAC;MAC/EC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,GAAG,CAACI,IAAI,CAAC;MAExC,MAAMC,aAAa,GAAGL,GAAG,CAACI,IAAI,CAACE,GAAG,CAAEC,KAAK,KAAM;QAC7C,GAAGA,KAAK;QACRC,GAAG,EAAE,GAAGD,KAAK,CAACC,GAAG;MACnB,CAAC,CAAC,CAAC;MAEHb,SAAS,CAACU,aAAa,CAAC;IAC1B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACda,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd;IACA,IAAIY,SAAS,CAACY,OAAO,CAACd,iBAAiB,CAAC,EAAE;MACxCE,SAAS,CAACY,OAAO,CAACd,iBAAiB,CAAC,CAACe,cAAc,CAAC;QAClDC,QAAQ,EAAE,QAAQ;QAClBC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACjB,iBAAiB,CAAC,CAAC;EAEvB,MAAMkB,YAAY,GAAG,CAAC,MAAM;IAC1B,IAAIC,aAAa,GAAG,CAAC;IACrB,IAAIC,SAAS,GAAG,IAAI;IAEpB,OAAQC,CAAC,IAAK;MACZ,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;;MAEtB;MACA,IAAIA,GAAG,GAAGH,aAAa,GAAG,GAAG,EAAE,OAAO,CAAC;MACvCA,aAAa,GAAGG,GAAG;;MAEnB;MACA,IAAIF,SAAS,EAAEI,YAAY,CAACJ,SAAS,CAAC;MAEtC,MAAMK,SAAS,GAAGJ,CAAC,CAACK,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACzCzB,oBAAoB,CAAE0B,SAAS,IAAK;QAClC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAACJ,SAAS,GAAGF,SAAS,EAAE3B,MAAM,CAACkC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAClF1B,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEoB,SAAS,EAAE,YAAY,EAAEC,QAAQ,CAAC,CAAC,CAAC;QACnE,OAAOA,QAAQ;MACjB,CAAC,CAAC;;MAEF;MACAR,SAAS,GAAGa,UAAU,CAAC,MAAM;QAC3B3B,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC/B,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IACX,CAAC;EACH,CAAC,EAAE,CAAC;EAEJ,oBACEZ,OAAA;IACEuC,SAAS,EAAC,YAAY;IACtBC,OAAO,EAAEjB,YAAa;IACtBkB,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,QAAQ,EAAE;IAAS,CAAE;IAAAC,QAAA,GAE9CzC,MAAM,CAACkC,MAAM,KAAK,CAAC,iBAAIrC,OAAA;MAAA4C,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1C7C,MAAM,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEiC,KAAK,kBACvBjD,OAAA;MAEEkD,GAAG,EAAGC,EAAE,IAAM5C,SAAS,CAACY,OAAO,CAAC8B,KAAK,CAAC,GAAGE,EAAI,CAAC;MAAA;MAC9CZ,SAAS,EAAC,iBAAiB;MAC3BE,KAAK,EAAE;QACLC,MAAM,EAAE;MACV,CAAE;MAAAE,QAAA,eAEF5C,OAAA,CAACF,SAAS;QAACkB,KAAK,EAAEA,KAAM;QAACoC,SAAS,EAAEH,KAAK,KAAK5C;MAAkB;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GAP9DhC,KAAK,CAACqC,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9C,EAAA,CApFID,SAAS;AAAAqD,EAAA,GAATrD,SAAS;AAsFf,eAAeA,SAAS;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}