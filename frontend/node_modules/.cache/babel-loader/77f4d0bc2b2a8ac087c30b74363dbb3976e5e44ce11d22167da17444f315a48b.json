{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Projects/hopewd/frontend/src/components/videofeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FlatList, View, StyleSheet, Dimensions, Text } from 'react-native';\nimport VideoCard from './VideoCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\nconst VideoFeed = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n\n  // Fetch videos from the API\n  const fetchVideos = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/videos?page=1&limit=10');\n      setVideos(res.data);\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n    }\n  };\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n  const handleViewableItemsChanged = ({\n    viewableItems\n  }) => {\n    // Update the current video index when a new item becomes fully visible\n    if (viewableItems.length > 0) {\n      setCurrentVideoIndex(viewableItems[0].index);\n    }\n  };\n  const viewabilityConfig = {\n    itemVisiblePercentThreshold: 95 // Detects items that are 95% visible\n  };\n  const renderItem = ({\n    item,\n    index\n  }) => /*#__PURE__*/_jsxDEV(View, {\n    style: [styles.videoContainer, {\n      backgroundColor: index % 2 === 0 ? 'lightblue' : 'lightcoral'\n    }],\n    children: /*#__PURE__*/_jsxDEV(VideoCard, {\n      video: item,\n      isCurrent: index === currentVideoIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(FlatList, {\n    data: videos,\n    keyExtractor: item => item.id.toString(),\n    renderItem: renderItem,\n    pagingEnabled: true // Enables snap-to-page behavior\n    ,\n    showsVerticalScrollIndicator: false,\n    snapToAlignment: \"start\",\n    decelerationRate: \"fast\",\n    onViewableItemsChanged: handleViewableItemsChanged // Detect visible item\n    ,\n    viewabilityConfig: viewabilityConfig // Configure viewability\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoFeed, \"BdJiebbRG4tvjbLDyoYOI3RTMRE=\");\n_c = VideoFeed;\nconst styles = StyleSheet.create({\n  videoContainer: {\n    height: SCREEN_HEIGHT,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default VideoFeed;\nvar _c;\n$RefreshReg$(_c, \"VideoFeed\");","map":{"version":3,"names":["React","useState","useEffect","axios","FlatList","View","StyleSheet","Dimensions","Text","VideoCard","jsxDEV","_jsxDEV","SCREEN_HEIGHT","get","height","VideoFeed","_s","videos","setVideos","currentVideoIndex","setCurrentVideoIndex","fetchVideos","res","data","error","console","handleViewableItemsChanged","viewableItems","length","index","viewabilityConfig","itemVisiblePercentThreshold","renderItem","item","style","styles","videoContainer","backgroundColor","children","video","isCurrent","fileName","_jsxFileName","lineNumber","columnNumber","keyExtractor","id","toString","pagingEnabled","showsVerticalScrollIndicator","snapToAlignment","decelerationRate","onViewableItemsChanged","_c","create","justifyContent","alignItems","$RefreshReg$"],"sources":["/Users/chris/Projects/hopewd/frontend/src/components/videofeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FlatList, View, StyleSheet, Dimensions, Text } from 'react-native';\nimport VideoCard from './VideoCard';\n\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\n\nconst VideoFeed = () => {\n  const [videos, setVideos] = useState([]);\n  const [currentVideoIndex, setCurrentVideoIndex] = useState(0);\n\n  // Fetch videos from the API\n  const fetchVideos = async () => {\n    try {\n      const res = await axios.get('http://localhost:5001/api/videos?page=1&limit=10');\n      setVideos(res.data);\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  const handleViewableItemsChanged = ({ viewableItems }) => {\n    // Update the current video index when a new item becomes fully visible\n    if (viewableItems.length > 0) {\n      setCurrentVideoIndex(viewableItems[0].index);\n    }\n  };\n\n  const viewabilityConfig = {\n    itemVisiblePercentThreshold: 95, // Detects items that are 95% visible\n  };\n\n  const renderItem = ({ item, index }) => (\n    <View style={[styles.videoContainer, { backgroundColor: index % 2 === 0 ? 'lightblue' : 'lightcoral' }]}>\n      <VideoCard video={item} isCurrent={index === currentVideoIndex} />\n    </View>\n  );\n\n  return (\n    <FlatList\n      data={videos}\n      keyExtractor={(item) => item.id.toString()}\n      renderItem={renderItem}\n      pagingEnabled // Enables snap-to-page behavior\n      showsVerticalScrollIndicator={false}\n      snapToAlignment=\"start\"\n      decelerationRate=\"fast\"\n      onViewableItemsChanged={handleViewableItemsChanged} // Detect visible item\n      viewabilityConfig={viewabilityConfig} // Configure viewability\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  videoContainer: {\n    height: SCREEN_HEIGHT,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default VideoFeed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,IAAI,EAAEC,UAAU,EAAEC,UAAU,EAAEC,IAAI,QAAQ,cAAc;AAC3E,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAGL,UAAU,CAACM,GAAG,CAAC,QAAQ,CAAC,CAACC,MAAM;AAErD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;;EAE7D;EACA,MAAMoB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACU,GAAG,CAAC,kDAAkD,CAAC;MAC/EK,SAAS,CAACI,GAAG,CAACC,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdmB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,0BAA0B,GAAGA,CAAC;IAAEC;EAAc,CAAC,KAAK;IACxD;IACA,IAAIA,aAAa,CAACC,MAAM,GAAG,CAAC,EAAE;MAC5BR,oBAAoB,CAACO,aAAa,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAG;IACxBC,2BAA2B,EAAE,EAAE,CAAE;EACnC,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAC;IAAEC,IAAI;IAAEJ;EAAM,CAAC,kBACjClB,OAAA,CAACN,IAAI;IAAC6B,KAAK,EAAE,CAACC,MAAM,CAACC,cAAc,EAAE;MAAEC,eAAe,EAAER,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,WAAW,GAAG;IAAa,CAAC,CAAE;IAAAS,QAAA,eACtG3B,OAAA,CAACF,SAAS;MAAC8B,KAAK,EAAEN,IAAK;MAACO,SAAS,EAAEX,KAAK,KAAKV;IAAkB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CACP;EAED,oBACEjC,OAAA,CAACP,QAAQ;IACPmB,IAAI,EAAEN,MAAO;IACb4B,YAAY,EAAGZ,IAAI,IAAKA,IAAI,CAACa,EAAE,CAACC,QAAQ,CAAC,CAAE;IAC3Cf,UAAU,EAAEA,UAAW;IACvBgB,aAAa,OAAC;IAAA;IACdC,4BAA4B,EAAE,KAAM;IACpCC,eAAe,EAAC,OAAO;IACvBC,gBAAgB,EAAC,MAAM;IACvBC,sBAAsB,EAAE1B,0BAA2B,CAAC;IAAA;IACpDI,iBAAiB,EAAEA,iBAAkB,CAAC;EAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEN,CAAC;AAAC5B,EAAA,CAhDID,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AAkDf,MAAMoB,MAAM,GAAG7B,UAAU,CAACgD,MAAM,CAAC;EAC/BlB,cAAc,EAAE;IACdtB,MAAM,EAAEF,aAAa;IACrB2C,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAezC,SAAS;AAAC,IAAAsC,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}