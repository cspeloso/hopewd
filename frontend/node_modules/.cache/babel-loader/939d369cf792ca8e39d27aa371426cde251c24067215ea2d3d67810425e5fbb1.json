{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Projects/hopewd/frontend/src/components/VideoFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport VideoCard from './VideoCard'; // Import VideoCard for displaying individual videos\nimport InfiniteScroll from 'react-infinite-scroll-component'; // For infinite scrolling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoFeed = () => {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const fetchVideos = async () => {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/videos?page=${page}&limit=5`); // Fetch from backend\n      setVideos(prev => [...prev, ...res.data]);\n      setHasMore(res.data.length > 0); // Check if there are more videos\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n    }\n  };\n  useEffect(() => {\n    fetchVideos(); // Initial fetch\n  }, [page]);\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: videos.length,\n    next: () => setPage(prev => prev + 1),\n    hasMore: hasMore,\n    loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-feed\",\n      children: videos.map(video => /*#__PURE__*/_jsxDEV(VideoCard, {\n        video: video\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) // Render each video as a card\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoFeed, \"qVbTb/bwe2UBCoMelusG64gTRek=\");\n_c = VideoFeed;\nexport default VideoFeed;\nvar _c;\n$RefreshReg$(_c, \"VideoFeed\");","map":{"version":3,"names":["React","useState","useEffect","axios","VideoCard","InfiniteScroll","jsxDEV","_jsxDEV","VideoFeed","_s","videos","setVideos","page","setPage","hasMore","setHasMore","fetchVideos","res","get","prev","data","length","error","console","dataLength","next","loader","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","video","id","_c","$RefreshReg$"],"sources":["/Users/chris/Projects/hopewd/frontend/src/components/VideoFeed.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport VideoCard from './VideoCard'; // Import VideoCard for displaying individual videos\nimport InfiniteScroll from 'react-infinite-scroll-component'; // For infinite scrolling\n\nconst VideoFeed = () => {\n  const [videos, setVideos] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n\n  const fetchVideos = async () => {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/videos?page=${page}&limit=5`); // Fetch from backend\n      setVideos((prev) => [...prev, ...res.data]);\n      setHasMore(res.data.length > 0); // Check if there are more videos\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchVideos(); // Initial fetch\n  }, [page]);\n\n  return (\n    <InfiniteScroll\n      dataLength={videos.length}\n      next={() => setPage((prev) => prev + 1)}\n      hasMore={hasMore}\n      loader={<h4>Loading...</h4>}\n    >\n      <div className=\"video-feed\">\n        {videos.map((video) => (\n          <VideoCard key={video.id} video={video} /> // Render each video as a card\n        ))}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default VideoFeed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa,CAAC,CAAC;AACrC,OAAOC,cAAc,MAAM,iCAAiC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,yCAAyCN,IAAI,UAAU,CAAC,CAAC,CAAC;MACtFD,SAAS,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,GAAGF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC3CL,UAAU,CAACE,GAAG,CAACG,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdc,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAACF,cAAc;IACbmB,UAAU,EAAEd,MAAM,CAACW,MAAO;IAC1BI,IAAI,EAAEA,CAAA,KAAMZ,OAAO,CAAEM,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAE;IACxCL,OAAO,EAAEA,OAAQ;IACjBY,MAAM,eAAEnB,OAAA;MAAAoB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAE;IAAAJ,QAAA,eAE5BpB,OAAA;MAAKyB,SAAS,EAAC,YAAY;MAAAL,QAAA,EACxBjB,MAAM,CAACuB,GAAG,CAAEC,KAAK,iBAChB3B,OAAA,CAACH,SAAS;QAAgB8B,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAAC,CAAC;MAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB,CAAC;AAACtB,EAAA,CAjCID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}